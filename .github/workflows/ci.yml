name: CI

on:
  pull_request:
    branches: [develop, master]
  push:
    branches: [master, develop]

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      SURGE_LOGIN: ${{ secrets.SURGE_LOGIN }}
      SURGE_TOKEN: ${{ secrets.SURGE_TOKEN }}
    steps:
      - uses: actions/checkout@v3
      # - name: Node Version
      #   uses: actions/setup-node@v1
      #   with:
      #       node-version: "14"
      - name: Cache node_modules
        uses: actions/cache@v3
        with:
          path: C:\Users\KTZMN5A\AppData\Local\npm-cache
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - run: npm ci
      - run: npm run format
      - run: npm test -- --coverage
        env:
          CI: true
      - name: Upload test coverage
        uses: actions/upload-artifact@v3
        with:
          name: code-coverage
          path: coverage
      - name: Build Project
        if: github.event_name == 'push'
        run: npm run build
      - name: Upload Build folder
        if: github.event_name == 'push'
        uses: actions/upload-artifact@v3
        with:
          name: build
          path: build
      - name: Zip artifacts
        if: github.event_name == 'push' && github.ref == 'refs/heads/master'
        run: |
          zip -r build.zip ./build
          zip -r coverage.zip ./coverage
      # - name: Create a release
      #   if: github.event_name == 'push' && github.ref == 'refs/heads/master'
      #   run: npx semantic-release
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Deploy to Staging
        if: github.event_name == 'push' && github.ref == 'refs/heads/develop'
        run: npx surge --project ./build --domain urgain.surge.sh
      - name: Deploy to Production
        if: github.event_name == 'push' && github.ref == 'refs/heads/master'
        run: npx surge --project ./build --domain defeated-father.surge.sh
      - name: Upload Coverage Reports
        if: github.event_name == 'push' && github.ref == 'refs/heads/master'
        run: npx codecov
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}